import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import React, { useState } from "react";

const inter = Inter({ subsets: ["latin"] });

const App = () => {
  const [prediction, setPrediction] = useState(null);
  const [userInput, setUserInput] = useState({
    Pregnancies: "",
    Glucose: "",
    BloodPressure: "",
    SkinThickness: "",
    Insulin: "",
    BMI: "",
    DiabetesPedigreeFunction: "",
    Age: "",
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setUserInput((prevInput) => ({
      ...prevInput,
      [name]: value,
    }));
  };

  const handleSubmit = async () => {
    const user_input_data = {
      Pregnancies: parseFloat(userInput.Pregnancies),
      Glucose: parseFloat(userInput.Glucose),
      BloodPressure: parseFloat(userInput.BloodPressure),
      SkinThickness: parseFloat(userInput.SkinThickness),
      Insulin: parseFloat(userInput.Insulin),
      BMI: parseFloat(userInput.BMI),
      DiabetesPedigreeFunction: parseFloat(userInput.DiabetesPedigreeFunction),
      Age: parseFloat(userInput.Age),
    };

    try {
      const response = await fetch("http://localhost:5001/predict", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(user_input_data),
      });

      const data = await response.json();
      setPrediction(data.prediction);
    } catch (error) {
      console.error("Error submitting request:", error);
    }
  };

  return (
    <div>
      <h1>Diabetes Prediction App</h1>
      <form>
        {Object.entries(userInput).map(([key, value]) => (
          <div key={key}>
            <label htmlFor={key}>{key}:</label>
            <input
              type="text"
              id={key}
              name={key}
              value={value}
              onChange={handleChange}
            />
          </div>
        ))}
      </form>
      <br />
      <button onClick={handleSubmit}>Submit Prediction</button>
      {prediction !== null && (
        <p>
          The model predicts that the patient is{" "}
          {prediction ? "diabetic" : "not diabetic"}.
        </p>
      )}

      <br />

      <div>
        <h1>Sample Values</h1>
        <h2>Diabetic</h2>
        'Pregnancies': 1, 'Glucose': 128, 'BloodPressure': 72, 'SkinThickness':
        35, 'Insulin': 0, 'BMI': 33.6, 'DiabetesPedigreeFunction': 0.627, 'Age':
        50
        <h2>Non Diabetic</h2>
        'Pregnancies': 2, 'Glucose': 110, 'BloodPressure': 70, 'SkinThickness':
        20, 'Insulin': 0, 'BMI': 25.5, 'DiabetesPedigreeFunction': 0.3, 'Age':
        30
      </div>
    </div>
  );
};

export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <App />
      </main>
    </>
  );
}
